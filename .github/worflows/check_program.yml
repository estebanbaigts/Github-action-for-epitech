name : check_program_epitech

on :
  push :
    branches :
      - main

env:
  MIRROR_URL: "git@github.com:EpitechPromo2027/B-MUL-200-BDX-2-1-myrpg-noa.messer.git"
  EXECUTABLES: "my_rpg"

jobs:
  check_coding_style:
    name: Coding Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: check coding style
        run: curl -fsSL https://raw.githubusercontent.com/estebanbaigts/Github-action-for-epitech/main/coding-style.sh | bash -s . .
  check_repo:
    name: "Checks if the repo is clean"
    runs-on: ubuntu-latest
    needs : [check_coding_style]
    steps:
      - uses: actions/checkout@v3
      - id: check_repo
        run: |
          if [[ $(git status --porcelain) ]]
          then
            echo "::error file=README.md,title=Repo is not clean::"
            exit 1
          else
            echo Repo is clean
          fi
  repo_size_check:
    needs : [check_coding_style, check_repo]
    name: Check Repository Size
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check repository size
        run: |
          REPO_SIZE=$(git ls-tree -r -t -l --full-name HEAD | awk '{sum += $4} END {print sum}')
          echo "Repository size: $REPO_SIZE bytes"
          MAX_SIZE=104857600 # 30 MB in bytes, adjust this value as needed
          if [ $REPO_SIZE -gt $MAX_SIZE ]; then
            echo "Error: Repository size ($REPO_SIZE bytes) is larger than the allowed limit ($MAX_SIZE bytes)"
            exit 1
          else
            echo "Repository size is within the allowed limit"
          fi
  run_tests:
    needs: [check_coding_style, check_repo, repo_size_check]
    name: "Runs the tests"
    runs-on: ubuntu-latest
    container:
      image: epitechcontent/epitest-docker:latest
    steps:
      - uses: actions/checkout@v3
      - id: run_tests
        run: make tests_run
        timeout-minutes: 2